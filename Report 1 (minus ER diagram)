Connor Bennudriti
Brinley Hull
EECS 447 Databases
Project Report 1
3-8-24

Introduction:
Pokemon team builder that allows for filtering through pokemon by various attributes. Managing a Pokemon database with information about each Pokemon, their types, their trainers, and battles. It’s important to keep track of the Pokemon information so that we can know things like which Pokemon belong to which team, what abilities come with each species and types, who won each battle, etc. A database will also make inserting, removing, and updating each Pokemon from each corresponding table (such as adding a Pokemon to a team, adding a skill to a Pokemon, etc.) easy.

Requirements Analysis:
Data:
1.	Pokemon: id, name, types, height, weight, combat power, evolution
2.	Player: name, color, buddy, pokemon owned, battles & outcomes
3.	Types: name, strengths, weaknesses
4.	Items: name, ability
Constraints:
1.	A team must have six Pokemon
2.	A team can only have one buddy Pokemon
3.	Team name must be unique
4.	Type name must be unique
5.	Pokemon name must be unique
6.	Pokemon can have multiple types
7.	Types can have multiple strengths and weaknesses
8.	A team has a color
9.	A team can battle another team
10.	There is an outcome to a battle. 
Operations:
1.	Adding/removing Pokemon to a team
2.	Updating information in Team, Type, and Pokemon
3.	Adding/deleting entries in Team, Type, and Pokemon
4.	Battling another team
5.	Using item
 
Conceptual Design:  ER-diagram

Constraints:
1.	A team must have six Pokemon
2.	A team can only have one buddy Pokemon
3.	Pokemon can have multiple types
4.	Types can have multiple strengths and weaknesses
5.	A team can battle another team
6.	Team, type, and pokemon are all identified by their name.

Logical design: Relational Schemas
Player(id, name, color, buddy)
Battle(player1_name, player2_name, outcome)
Pokemon(num, name, CP, height, weight, evolution)
Pokemon_in_Team(player_name, pokemon_name)
Type(name)
Type_Strength(type_name, strength)
Type_Weakness(type_name, weakness)
PokemonType(pokemon_name, type_name)
Item(name, ability)
Player_use_item(player_id, item_name)
Item_worksfor_type(item_name, type_name)
